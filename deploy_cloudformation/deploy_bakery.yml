# Copyright 2017 Insurance Australia Group Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
- hosts: localhost
  connection: local
  vars:
    bakery_cf_bucket: bakery-cloudformation-deployment
    env:              Prod
    application:      Bakery
    server_name:      Bakery
    launched_by:      iam_user
    prefix: ""
  tasks:

    - name: "Upload CloudFormation templates to s3 bucket"
      s3:
        bucket: "{{ bakery_cf_bucket }}"
        object: "/{{ item }}"
        src: "{{ playbook_dir }}/bakery/{{ item }}"
        mode: put
        region: "{{ REGION }}"
      register: s3
      until: s3|success
      retries: 5
      delay: 10
      with_items:
          - bakery_env.yml
          - bakery_account.yml

    - name: "Run main CloudFormation template"
      cloudformation:
        stack_name: "{{ prefix }}BakeryAccount"
        state: present
        template: "{{ playbook_dir }}/bakery/bakery_stack.yml"
        tags:
          Environment: "{{ env }}"
          Application: "{{ application }}"
          Server Name: "{{ server_name }}"
          Launched By: "{{ launched_by }}"
        template_parameters:
          CloudFormationS3Bucket: "{{ bakery_cf_bucket }}"
        region: "{{ REGION }}"

    - name: "Get Cloudformation stack info"
      cloudformation_facts:
        stack_name: "{{ prefix }}Bakery"
      register: stack

    - name: "Get Ansible Facts for Cloudformation Stack"
      set_fact:
        output: "{{ stack.ansible_facts.cloudformation }}"

    - name: "Get Cloudformation Stack Status"
      set_fact:
        stack_status:  "{{ output[item]['stack_description']['stack_status'] }}"
      with_items: "{{ prefix }}Bakery"

    - fail:
        msg: "Build Failed. Stack status: {{ stack_status }}"
      when:
        - stack_status != "CREATE_COMPLETE"
        - stack_status != "UPDATE_COMPLETE"
