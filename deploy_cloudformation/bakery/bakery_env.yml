# Copyright 2017 Insurance Australia Group Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Bakery stack that creates IAM resources that support federation for Environment Burger accounts"

Parameters:

  TeamName:
    Description: "Team name will be prefixed to all IAM resources"
    Type: String
    Default: IAMBakery

  Environment:
    Description: "Please enter NonProd, Prod, or Mgmt"
    Type: String
    AllowedValues:
    - NonProd
    - Prod
    - Mgmt

  AccessType:
    Description: "Please enter Admin, PowerUser, or ReadOnly"
    Type: String
    AllowedValues:
    - Admin
    - PowerUser
    - ReadOnly

Mappings:

  # NOTE: Every time we deploy a new burger account, make sure the assume role arn is set here

  # NonProd gets access to:
  # * nonprod Account 1 (222222222222)
  # * nonprod Account 2 (333333333333)
  NonProd:
    Admin:
      roles: >-
        arn:aws:iam::222222222222:role/BurgerIAMBakeryNonProdAdmins,
        arn:aws:iam::333333333333:role/BurgerIAMBakeryNonProdAdmins
    PowerUser:
      roles: >-
        arn:aws:iam::222222222222:role/BurgerIAMBakeryNonProdPowerUser,
        arn:aws:iam::333333333333:role/BurgerIAMBakeryNonProdPowerUser
    ReadOnly:
      roles: >-
        arn:aws:iam::222222222222:role/BurgerIAMBakeryNonProdReadOnly,
        arn:aws:iam::333333333333:role/BurgerIAMBakeryNonProdReadOnly

  # Prod gets access to:
  # * prod Account (444444444444)
  Prod:
    Admin:
      roles: arn:aws:iam::444444444444:role/BurgerIAMBakeryProdAdmins
    PowerUser:
      roles: arn:aws:iam::444444444444:role/BurgerIAMBakeryProdPowerUser
    ReadOnly:
      roles: arn:aws:iam::444444444444:role/BurgerIAMBakeryProdReadOnly
        
  # Management account (mgmt) gets access to:
  # * mgmt Account (555555555555)
  Mgmt:
    Admin:
      roles: arn:aws:iam::555555555555:role/BurgerIAMBakeryMgmtAdmins
    PowerUser:
      roles: arn:aws:iam::555555555555:role/BurgerIAMBakeryMgmtPowerUser
    ReadOnly:
      roles: arn:aws:iam::555555555555:role/BurgerIAMBakeryMgmtReadOnly

Resources:

  AccessTypeGroup:
    Type: "AWS::IAM::Group"
    Properties:
      GroupName: !Sub '${TeamName}${Environment}${AccessType}'

  AccessTypeGroupPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    DependsOn:
    - AccessTypeGroup
    Properties:
      ManagedPolicyName: !Sub '${TeamName}${Environment}${AccessType}Group'
      Description: !Sub "This policy will allow role ${AccessType}Group to assume role in burger accounts"
      Groups:
      - !Ref AccessTypeGroup
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action: sts:AssumeRole
          Resource: !Split [", ",!FindInMap [!Ref Environment, !Ref AccessType, roles]]
